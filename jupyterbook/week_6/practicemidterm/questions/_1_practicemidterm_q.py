from pykubegrader.widgets.select_many import MultiSelect, SelectMany
from pykubegrader.widgets.true_false import TFQuestion, TFStyle
from pykubegrader.widgets.multiple_choice import MCQuestion, MCQ
import pykubegrader.initialize
import panel as pn

pn.extension()

class Question1(MCQuestion):
    def __init__(self):
        super().__init__(
            title=f"Select the Best Answer",
            style=MCQ,
            question_number=1,
            keys=['q1-1-program-definition', 'q1-2-formal-vs-natural-languages', 'q1-3-python-modules', 'q1-4-python-variables', 'q1-5-python-operators', 'q1-6-computer-components', 'q1-7-python-datatypes', 'q1-8-python-comments', 'q1-9-python-lists', 'q1-10-python-mutability', 'q1-11-floating-point-precision', 'q1-12-string-methods', 'q1-13-debugging-code', 'q1-14-numpy-sympy', 'q1-15-boolean-operators', 'q1-16-control-structures', 'q1-17-continue-break-else'],
            options=[['A set of instructions that a computer executes to perform a task.', 'A type of data structure used in Python.', 'A mathematical equation used in programming.', 'A file that stores images and videos.'], ['Formal languages have strict syntax rules, while natural languages are flexible.', 'Natural languages are used in programming, while formal languages are used in everyday communication.', 'Formal languages are easier to learn than natural languages.', 'Natural languages are always written, while formal languages are spoken.'], ['A file containing Python code that can be reused in other programs.', 'A type of Python variable.', 'A built-in function in Python.', 'A data structure used to store multiple values.'], ['`x = 10`', '`int x = 10`', '`var x = 10`', '`x := 10`'], ['Performs integer division.', 'Performs exponentiation.', 'Performs multiplication.', 'Performs modulo division.'], ['CPU', 'Keyboard', 'Python Interpreter', 'RAM'], ['List', 'Integer', 'String', 'Tuple'], ['`# This is a comment`', '`// This is a comment`', '`/* This is a comment */`', '`<!-- This is a comment -->`'], ['`[1, 2, 3]`', '`[1, 2, 3, 4]`', '`[4, 3, 2, 1]`', '`Error`'], ['Their values can be changed after creation.', 'They cannot be modified after creation.', 'They are always integers.', 'They are slower than immutable objects.'], ['`0.3`', '`0.30000000000000004`', '`0.2`', '`Error`'], ['Removes leading and trailing whitespace from a string.', 'Splits a string into a list of substrings.', 'Converts a string to uppercase.', 'Replaces all occurrences of a substring in a string.'], ['`510`', '`15`', '`Error`', '`None`'], ['To perform numerical computations on arrays and matrices.', 'To create graphical user interfaces.', 'To manipulate strings.', 'To handle file I/O operations.'], ['`True`', '`False`', '`None`', '`Error`'], ['Executes a block of code if a condition is true.', 'Repeats a block of code a specified number of times.', 'Defines a function.', 'Imports a module.'], ['Exits the loop immediately.', 'Skips the current iteration and continues to the next one.', 'Executes a block of code if the loop completes without a `break`.', 'Restarts the loop from the beginning.']],
            descriptions=['What is a program?', 'What is the key difference between formal and natural languages?', 'What is a Python module?', 'What is the correct way to declare a variable in Python?', 'What does the `//` operator do in Python?', 'Which of the following is NOT a basic component of a computer?', 'Which of the following is a mutable data type in Python?', 'How do you write a single-line comment in Python?', 'What is the output of the following code?**\n```python\nmy_list = [1, 2, 3]\nmy_list.append(4)\nprint(my_list)\n```', 'Which of the following is true about mutable objects in Python?', 'What is the output of the following code?**\n```python\nx = 0.1 + 0.2\nprint(x)\n```', 'What does the `strip()` method do in Python?', 'What is the output of the following code?**\n```python\nx = 5\ny = "10"\nprint(x + y)\n```', 'What is the primary purpose of the NumPy library?', 'What is the output of the following code?**\n```python\nx = True\ny = False\nprint(x and y)\n```', 'What does the `if` statement do in Python?', 'What does the `break` statement do in a loop?'],
            points=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
        )
class Question3(TFQuestion):
    def __init__(self):
        super().__init__(
            title=f"True or False",
            style=TFStyle,
            question_number=3,
            keys=['q3-1-program-definition', 'q3-2-formal-languages', 'q3-3-python-modules', 'q3-4-python-variables', 'q3-5-python-operators', 'q3-6-computer-components', 'q3-7-python-datatypes', 'q3-8-python-comments', 'q3-9-python-lists', 'q3-10-python-mutability', 'q3-11-floating-point-numbers', 'q3-12-string-methods', 'q3-13-debugging-code', 'q3-14-numpy-sympy', 'q3-15-boolean-operators', 'q3-16-control-structures', 'q3-17-continue-break-else'],
            descriptions=['A program is a set of instructions that a computer executes to perform a task.', 'Formal languages are always easier to learn than natural languages.', 'A Python module can only contain functions.', 'Python variables must be declared with a specific data type.', 'The `%` operator in Python is used for exponentiation.', 'The CPU is responsible for executing instructions in a computer.', 'Strings in Python are mutable.', 'Comments in Python are executed by the interpreter.', 'Lists in Python can contain elements of different data types.', 'Tuples in Python are mutable.', 'Floating-point arithmetic in Python is always precise.', 'The `replace()` method in Python modifies the original string.', 'Using print statements is a common debugging technique in Python.', 'NumPy is primarily used for symbolic mathematics.', 'The `and` operator in Python returns `True` if both operands are `True`.', 'The `for` loop in Python is used to iterate over a sequence of elements.', 'The `else` block in a loop is executed if the loop completes without a `break`.'],
            points=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
        )
class Question2(SelectMany):
    def __init__(self):
        super().__init__(
            title=f"Select All That Apply",
            style=MultiSelect,
            question_number=2,
            keys=['q2-1-programatic-thinking', 'q2-2-python-packages', 'q2-3-python-data-types', 'q2-4-python-expressions', 'q2-5-computer-components', 'q2-6-python-comments', 'q2-7-python-lists', 'q2-8-python-dictionaries', 'q2-9-python-mutability', 'q2-10-floating-point-numbers', 'q2-11-string-methods', 'q2-12-numpy-sympy', 'q2-13-boolean-operators', 'q2-14-control-structures', 'q2-15-continue-break-else'],
            descriptions=['Which of the following are characteristics of programmatic thinking?', 'Which of the following are true about Python packages?', 'Which of the following are valid Python data types?', 'Which of the following are valid Python expressions?', 'Which of the following are primarily used to store data on a computer? Do not consider cache', 'Which of the following are valid ways to write comments in Python?', 'Which of the following are true about Python lists?', 'Which of the following are true about Python dictionaries?', 'Which of the following are mutable objects in Python?', 'Which of the following are true about floating-point numbers in Python?', 'Which of the following are valid string methods in Python?', 'Which of the following are true about NumPy and SymPy?', 'Which of the following are Boolean operators in Python?', 'Which of the following are control structures in Python?', 'Which of the following are valid loop control statements in Python?'],
            options=[['Breaking down problems into smaller, manageable parts.', 'Writing code without planning.', 'Using algorithms to solve problems.', 'Ignoring errors and exceptions.'], ['A package is a collection of modules.', 'Packages can be installed using `pip`.', 'All packages are built into Python by default.', 'Packages cannot be created by users.'], ['Integer', 'String', 'List', 'Dictionary'], ['`x + y`', '`x = 10`', '`if x > 5:`', '`print("Hello")`'], ['CPU', 'GPU', 'RAM', 'Hard Drive'], ['`# This is a comment`', '`// This is a comment`', '`"""This is a comment"""`', '`/* This is a comment */`'], ['Lists are mutable.', 'Lists can contain elements of different data types.', 'Lists are immutable.', 'Lists can only contain integers.'], ['Dictionaries store key-value pairs.', 'Dictionary keys must be unique.', 'Dictionaries are ordered modern Python versions.', 'Dictionaries are immutable.'], ['List', 'Dictionary', 'String', 'Tuple'], ['Floating-point numbers can represent decimal values.', 'Floating-point arithmetic is always precise.', 'Floating-point numbers have limited precision.', 'Floating-point numbers are immutable.'], ['`strip()`', '`split()`', '`append()`', '`replace()`'], ['NumPy is used for numerical computations.', 'SymPy is used for symbolic mathematics.', 'NumPy and SymPy are the same library.', 'SymPy can perform numerical integration.'], ['`and`', '`or`', '`not`', '`xor`'], ['`if`', '`while`', '`for`', '`def`'], ['`break`', '`continue`', '`else`', '`end`']],
            points=[2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0],
            grade=['parts'],
        )
